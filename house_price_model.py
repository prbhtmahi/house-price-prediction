# -*- coding: utf-8 -*-
"""Multicollinearity Removal using VIF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ryTikb3JpNwvm1PrlbdOQvMKVrrS_IE3
"""

import pandas as pd
data = pd.read_csv("https://trello-attachments.s3.amazonaws.com/5ec7f2939eab0d7d52223607/5eec5b0aff18ad35f3ec6b5e/a3110d41dc7ed8e475800b4f1287944b/Housing_Modified_prepared.csv")


# Calculate R2 Score

#import pandas as pd


# Select Y (dependent variable) and X(independent variable)


Y = data["price"]
independent_variable = data.columns
independent_variable = independent_variable.delete(0)
X = data[independent_variable]


# Calculate r2 Score for Linear Regression Model using
# sum of Squared Total (SST) and Sum of Squared Redidual (SSR)

# Calculate sum of Squared Total (Sum of(y - ymean)^2)

#Ymean = Y.mean()
#print("Mean of Actual dependent variable", Ymean)

# Calculate square of y = ymean using numpy library

#import numpy as np
#squared_total = np.square(Y - Ymean)
#print("Squared total is ", squared_total)
#sst = squared_total.sum()
#print("sum of squared total is ", sst)

# Train the model using Linear Regression
from sklearn.linear_model import LinearRegression
from statsmodels.api import OLS

#lr = LinearRegression()
#lr.fit(X, Y)

# Predict using Linear Regression Model
#Ypred = lr.predict(X)
#Ypred

# Calculate R2Score , RMSE and MAE using sklearn
#from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error
#r2score = r2_score(Y, Ypred)
#print("R2 Score", r2score)

X = data[independent_variable]


# Fit the ordinary Least Squared Regression Model
import statsmodels.api as sm
model = sm.OLS(Y, X)

# Train the model
model = model.fit()

# Check the model summary
model.summary()

from statsmodels.stats.outliers_influence import variance_inflation_factor as vif
for i in range(len(independent_variable)):
  vif_list = [vif(data[independent_variable].values, index) for index in range(len(independent_variable))]
  mvif = max(vif_list)
  # print("Max vif value is ", mvif)
  drop_index = vif_list.index(mvif)
  #print("For the Independent variable ", independent_variable[drop_index])
  if mvif > 10:
    #print("Deleting ", independent_variable[drop_index])
    independent_variable = independent_variable.delete(drop_index)
#print("Final Independent variable", independent_variable)

Y = data["price"]
X = data[independent_variable]
model = sm.OLS(Y, X)
model = model.fit()
model.summary()
import sys
index = 1
user_input ={}
for var in independent_variable:
  #temp = input("Enter "+var+": ")
  temp = sys.argv[index]
  index = index + 1
  user_input[var] = temp
user_df = pd.DataFrame(data=user_input, index=[0], columns=independent_variable)
import sklearn.linear_model as lm
lr = lm.LinearRegression()
lr.fit(X, Y)
price = lr.predict(user_df)
print("Price of House is USD", int(price[0]))
